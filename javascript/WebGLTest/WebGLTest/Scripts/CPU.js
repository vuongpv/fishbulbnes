var cpuOpArray = [];
function buildCpuOpArray() {
    cpuOpArray[0] = function () { cpuCurinst_AddressingMode = 1; cpuProgramCounter += 1; cpuPushStack(cpuProgramCounter >> 8 & 255); cpuPushStack(cpuProgramCounter & 255); cpuPushStack(cpuStatusRegister | 48); cpuStatusRegister |= 20; cpuAddressBus = 65534; var a = getCurrentByte(); cpuAddressBus = 65535; var b = getCurrentByte(); cpuProgramCounter = a + b * 256; cpuClock = cpuClock + 7 + cpuCurinst_ExtraTiming }; cpuOpArray[1] = function () {
        cpuCurinst_AddressingMode = 12; cpuCurinst_Parameters0 = cpuGetByte(cpuProgramCounter++); cpuAccumulator |=
decodeOperand(); _setZNFlags(cpuAccumulator); cpuClock = cpuClock + 6 + cpuCurinst_ExtraTiming
    }; cpuOpArray[2] = function () { cpuCurinst_AddressingMode = 1; cpuClock = cpuClock + 0 + cpuCurinst_ExtraTiming }; cpuOpArray[3] = function () { cpuCurinst_AddressingMode = 0; cpuClock = cpuClock + 0 + cpuCurinst_ExtraTiming }; cpuOpArray[4] = function () { cpuCurinst_AddressingMode = 0; cpuCurinst_AddressingMode === 9 && decodeAddress(); cpuClock = cpuClock + 3 + cpuCurinst_ExtraTiming }; cpuOpArray[5] = function () {
        cpuCurinst_AddressingMode = 4; cpuCurinst_Parameters0 =
cpuGetByte(cpuProgramCounter++); cpuAccumulator |= decodeOperand(); _setZNFlags(cpuAccumulator); cpuClock = cpuClock + 2 + cpuCurinst_ExtraTiming
    }; cpuOpArray[6] = function () { cpuCurinst_AddressingMode = 4; cpuCurinst_Parameters0 = cpuGetByte(cpuProgramCounter++); var a = decodeOperand(); cpuSetFlag(1, (a & 128) === 128); a = a << 1 & 254; cpuCurinst_AddressingMode === 2 ? cpuAccumulator = a : cpuSetByte(decodeAddress(), a); _setZNFlags(a); cpuClock = cpuClock + 5 + cpuCurinst_ExtraTiming }; cpuOpArray[7] = function () {
        cpuCurinst_AddressingMode = 0; cpuClock =
cpuClock + 0 + cpuCurinst_ExtraTiming
    }; cpuOpArray[8] = function () { cpuCurinst_AddressingMode = 1; cpuPushStack(cpuStatusRegister | 48); cpuClock = cpuClock + 3 + cpuCurinst_ExtraTiming }; cpuOpArray[9] = function () { cpuCurinst_AddressingMode = 3; cpuCurinst_Parameters0 = cpuGetByte(cpuProgramCounter++); cpuAccumulator |= decodeOperand(); _setZNFlags(cpuAccumulator); cpuClock = cpuClock + 2 + cpuCurinst_ExtraTiming }; cpuOpArray[10] = function () {
        cpuCurinst_AddressingMode = 2; var a = decodeOperand(); cpuSetFlag(1, (a & 128) === 128); a = a << 1 & 254; cpuCurinst_AddressingMode ===
2 ? cpuAccumulator = a : cpuSetByte(decodeAddress(), a); _setZNFlags(a); cpuClock = cpuClock + 2 + cpuCurinst_ExtraTiming
    }; cpuOpArray[11] = function () { cpuCurinst_AddressingMode = 1; cpuClock = cpuClock + 0 + cpuCurinst_ExtraTiming }; cpuOpArray[12] = function () { cpuCurinst_AddressingMode = 8; cpuCurinst_Parameters0 = cpuGetByte(cpuProgramCounter++); cpuCurinst_Parameters1 = cpuGetByte(cpuProgramCounter++); cpuCurinst_AddressingMode === 9 && decodeAddress(); cpuClock = cpuClock + 6 + cpuCurinst_ExtraTiming }; cpuOpArray[13] = function () {
        cpuCurinst_AddressingMode =
8; cpuCurinst_Parameters0 = cpuGetByte(cpuProgramCounter++); cpuCurinst_Parameters1 = cpuGetByte(cpuProgramCounter++); cpuAccumulator |= decodeOperand(); _setZNFlags(cpuAccumulator); cpuClock = cpuClock + 4 + cpuCurinst_ExtraTiming
    }; cpuOpArray[14] = function () {
        cpuCurinst_AddressingMode = 8; cpuCurinst_Parameters0 = cpuGetByte(cpuProgramCounter++); cpuCurinst_Parameters1 = cpuGetByte(cpuProgramCounter++); var a = decodeOperand(); cpuSetFlag(1, (a & 128) === 128); a = a << 1 & 254; cpuCurinst_AddressingMode === 2 ? cpuAccumulator = a : cpuSetByte(decodeAddress(),
a); _setZNFlags(a); cpuClock = cpuClock + 6 + cpuCurinst_ExtraTiming
    }; cpuOpArray[15] = function () { cpuCurinst_AddressingMode = 1; cpuClock = cpuClock + 0 + cpuCurinst_ExtraTiming }; cpuOpArray[16] = function () { cpuCurinst_AddressingMode = 7; cpuCurinst_Parameters0 = cpuGetByte(cpuProgramCounter++); if ((cpuStatusRegister & 128) !== 128) { cpuCurinst_ExtraTiming = 1; var a = cpuCurinst_Parameters0 & 255; (a & 128) === 128 && (a -= 256); cpuProgramCounter += a; (cpuProgramCounter & 255) < a && (cpuCurinst_ExtraTiming = 2) } cpuClock = cpuClock + 2 + cpuCurinst_ExtraTiming };
    cpuOpArray[17] = function () { cpuCurinst_AddressingMode = 13; cpuCurinst_Parameters0 = cpuGetByte(cpuProgramCounter++); cpuAccumulator |= decodeOperand(); _setZNFlags(cpuAccumulator); cpuClock = cpuClock + 5 + cpuCurinst_ExtraTiming }; cpuOpArray[18] = function () { cpuCurinst_AddressingMode = 14; cpuCurinst_Parameters0 = cpuGetByte(cpuProgramCounter++); cpuClock = cpuClock + 0 + cpuCurinst_ExtraTiming }; cpuOpArray[19] = function () { cpuCurinst_AddressingMode = 1; cpuClock = cpuClock + 0 + cpuCurinst_ExtraTiming }; cpuOpArray[20] = function () {
        cpuCurinst_AddressingMode =
4; cpuCurinst_Parameters0 = cpuGetByte(cpuProgramCounter++); cpuCurinst_AddressingMode === 9 && decodeAddress(); cpuClock = cpuClock + 3 + cpuCurinst_ExtraTiming
    }; cpuOpArray[21] = function () { cpuCurinst_AddressingMode = 5; cpuCurinst_Parameters0 = cpuGetByte(cpuProgramCounter++); cpuAccumulator |= decodeOperand(); _setZNFlags(cpuAccumulator); cpuClock = cpuClock + 3 + cpuCurinst_ExtraTiming }; cpuOpArray[22] = function () {
        cpuCurinst_AddressingMode = 5; cpuCurinst_Parameters0 = cpuGetByte(cpuProgramCounter++); var a = decodeOperand(); cpuSetFlag(1,
(a & 128) === 128); a = a << 1 & 254; cpuCurinst_AddressingMode === 2 ? cpuAccumulator = a : cpuSetByte(decodeAddress(), a); _setZNFlags(a); cpuClock = cpuClock + 6 + cpuCurinst_ExtraTiming
    }; cpuOpArray[23] = function () { cpuCurinst_AddressingMode = 1; cpuClock = cpuClock + 0 + cpuCurinst_ExtraTiming }; cpuOpArray[24] = function () { cpuCurinst_AddressingMode = 1; cpuSetFlag(1, !1); cpuClock = cpuClock + 2 + cpuCurinst_ExtraTiming }; cpuOpArray[25] = function () {
        cpuCurinst_AddressingMode = 10; cpuCurinst_Parameters0 = cpuGetByte(cpuProgramCounter++); cpuCurinst_Parameters1 =
cpuGetByte(cpuProgramCounter++); cpuAccumulator |= decodeOperand(); _setZNFlags(cpuAccumulator); cpuClock = cpuClock + 4 + cpuCurinst_ExtraTiming
    }; cpuOpArray[26] = function () { cpuCurinst_AddressingMode = 1; cpuCurinst_AddressingMode === 9 && decodeAddress(); cpuClock = cpuClock + 2 + cpuCurinst_ExtraTiming }; cpuOpArray[27] = function () { cpuCurinst_AddressingMode = 1; cpuClock = cpuClock + 0 + cpuCurinst_ExtraTiming }; cpuOpArray[28] = function () {
        cpuCurinst_AddressingMode = 8; cpuCurinst_Parameters0 = cpuGetByte(cpuProgramCounter++); cpuCurinst_Parameters1 =
cpuGetByte(cpuProgramCounter++); cpuCurinst_AddressingMode === 9 && decodeAddress(); cpuClock = cpuClock + 6 + cpuCurinst_ExtraTiming
    }; cpuOpArray[29] = function () { cpuCurinst_AddressingMode = 9; cpuCurinst_Parameters0 = cpuGetByte(cpuProgramCounter++); cpuCurinst_Parameters1 = cpuGetByte(cpuProgramCounter++); cpuAccumulator |= decodeOperand(); _setZNFlags(cpuAccumulator); cpuClock = cpuClock + 4 + cpuCurinst_ExtraTiming }; cpuOpArray[30] = function () {
        cpuCurinst_AddressingMode = 9; cpuCurinst_Parameters0 = cpuGetByte(cpuProgramCounter++); cpuCurinst_Parameters1 =
cpuGetByte(cpuProgramCounter++); var a = decodeOperand(); cpuSetFlag(1, (a & 128) === 128); a = a << 1 & 254; cpuCurinst_AddressingMode === 2 ? cpuAccumulator = a : cpuSetByte(decodeAddress(), a); _setZNFlags(a); cpuClock = cpuClock + 7 + cpuCurinst_ExtraTiming
    }; cpuOpArray[31] = function () { cpuCurinst_AddressingMode = 1; cpuClock = cpuClock + 0 + cpuCurinst_ExtraTiming }; cpuOpArray[32] = function () {
        cpuCurinst_AddressingMode = 8; cpuCurinst_Parameters0 = cpuGetByte(cpuProgramCounter++); cpuCurinst_Parameters1 = cpuGetByte(cpuProgramCounter++); cpuPushStack(cpuProgramCounter >>
8 & 255); cpuPushStack(cpuProgramCounter - 1 & 255); cpuProgramCounter = decodeAddress(); cpuClock = cpuClock + 6 + cpuCurinst_ExtraTiming
    }; cpuOpArray[33] = function () { cpuCurinst_AddressingMode = 12; cpuCurinst_Parameters0 = cpuGetByte(cpuProgramCounter++); cpuAccumulator &= decodeOperand(); _setZNFlags(cpuAccumulator); cpuClock = cpuClock + 6 + cpuCurinst_ExtraTiming }; cpuOpArray[34] = function () { cpuCurinst_AddressingMode = 1; cpuClock = cpuClock + 0 + cpuCurinst_ExtraTiming }; cpuOpArray[35] = function () {
        cpuCurinst_AddressingMode = 1; cpuClock = cpuClock +
0 + cpuCurinst_ExtraTiming
    }; cpuOpArray[36] = function () { cpuCurinst_AddressingMode = 4; cpuCurinst_Parameters0 = cpuGetByte(cpuProgramCounter++); var a = decodeOperand(); cpuSetFlag(NES.CPU.Fastendo.CPUStatusMasks.overflowMask, (a & 64) === 64); (a & 128) === 128 ? cpuStatusRegister |= 128 : cpuStatusRegister &= 127; (a & cpuAccumulator) === 0 ? cpuStatusRegister |= 2 : cpuStatusRegister &= 253; cpuClock = cpuClock + 3 + cpuCurinst_ExtraTiming }; cpuOpArray[37] = function () {
        cpuCurinst_AddressingMode = 4; cpuCurinst_Parameters0 = cpuGetByte(cpuProgramCounter++);
        cpuAccumulator &= decodeOperand(); _setZNFlags(cpuAccumulator); cpuClock = cpuClock + 2 + cpuCurinst_ExtraTiming
    }; cpuOpArray[38] = function () { cpuCurinst_AddressingMode = 4; cpuCurinst_Parameters0 = cpuGetByte(cpuProgramCounter++); var a = decodeOperand(), b = 0; cpuGetFlag(1) && (b = 1); cpuSetFlag(1, (a & 128) === 128); a <<= 1; a &= 255; a |= b; _setZNFlags(a); cpuCurinst_AddressingMode === 2 ? cpuAccumulator = a : cpuSetByte(decodeAddress(), a); cpuClock = cpuClock + 5 + cpuCurinst_ExtraTiming }; cpuOpArray[39] = function () {
        cpuCurinst_AddressingMode = 1; cpuClock =
cpuClock + 0 + cpuCurinst_ExtraTiming
    }; cpuOpArray[40] = function () { cpuCurinst_AddressingMode = 1; cpuStatusRegister = cpuPopStack(); cpuClock = cpuClock + 3 + cpuCurinst_ExtraTiming }; cpuOpArray[41] = function () { cpuCurinst_AddressingMode = 3; cpuCurinst_Parameters0 = cpuGetByte(cpuProgramCounter++); cpuAccumulator &= decodeOperand(); _setZNFlags(cpuAccumulator); cpuClock = cpuClock + 2 + cpuCurinst_ExtraTiming }; cpuOpArray[42] = function () {
        cpuCurinst_AddressingMode = 2; var a = decodeOperand(), b = 0; cpuGetFlag(1) && (b = 1); cpuSetFlag(1, (a & 128) ===
128); a <<= 1; a &= 255; a |= b; _setZNFlags(a); cpuCurinst_AddressingMode === 2 ? cpuAccumulator = a : cpuSetByte(decodeAddress(), a); cpuClock = cpuClock + 2 + cpuCurinst_ExtraTiming
    }; cpuOpArray[43] = function () { cpuCurinst_AddressingMode = 1; cpuClock = cpuClock + 0 + cpuCurinst_ExtraTiming }; cpuOpArray[44] = function () {
        cpuCurinst_AddressingMode = 8; cpuCurinst_Parameters0 = cpuGetByte(cpuProgramCounter++); cpuCurinst_Parameters1 = cpuGetByte(cpuProgramCounter++); var a = decodeOperand(); cpuSetFlag(NES.CPU.Fastendo.CPUStatusMasks.overflowMask, (a &
64) === 64); (a & 128) === 128 ? cpuStatusRegister |= 128 : cpuStatusRegister &= 127; (a & cpuAccumulator) === 0 ? cpuStatusRegister |= 2 : cpuStatusRegister &= 253; cpuClock = cpuClock + 4 + cpuCurinst_ExtraTiming
    }; cpuOpArray[45] = function () { cpuCurinst_AddressingMode = 8; cpuCurinst_Parameters0 = cpuGetByte(cpuProgramCounter++); cpuCurinst_Parameters1 = cpuGetByte(cpuProgramCounter++); cpuAccumulator &= decodeOperand(); _setZNFlags(cpuAccumulator); cpuClock = cpuClock + 4 + cpuCurinst_ExtraTiming }; cpuOpArray[46] = function () {
        cpuCurinst_AddressingMode =
8; cpuCurinst_Parameters0 = cpuGetByte(cpuProgramCounter++); cpuCurinst_Parameters1 = cpuGetByte(cpuProgramCounter++); var a = decodeOperand(), b = 0; cpuGetFlag(1) && (b = 1); cpuSetFlag(1, (a & 128) === 128); a <<= 1; a &= 255; a |= b; _setZNFlags(a); cpuCurinst_AddressingMode === 2 ? cpuAccumulator = a : cpuSetByte(decodeAddress(), a); cpuClock = cpuClock + 6 + cpuCurinst_ExtraTiming
    }; cpuOpArray[47] = function () { cpuCurinst_AddressingMode = 1; cpuClock = cpuClock + 0 + cpuCurinst_ExtraTiming }; cpuOpArray[48] = function () {
        cpuCurinst_AddressingMode = 7; cpuCurinst_Parameters0 =
cpuGetByte(cpuProgramCounter++); if ((cpuStatusRegister & 128) === 128) { cpuCurinst_ExtraTiming = 1; var a = cpuCurinst_Parameters0 & 255; (a & 128) === 128 && (a -= 256); cpuProgramCounter += a; (cpuProgramCounter & 255) < a && (cpuCurinst_ExtraTiming = 2) } cpuClock = cpuClock + 2 + cpuCurinst_ExtraTiming
    }; cpuOpArray[49] = function () { cpuCurinst_AddressingMode = 13; cpuCurinst_Parameters0 = cpuGetByte(cpuProgramCounter++); cpuAccumulator &= decodeOperand(); _setZNFlags(cpuAccumulator); cpuClock = cpuClock + 5 + cpuCurinst_ExtraTiming }; cpuOpArray[50] = function () {
        cpuCurinst_AddressingMode =
14; cpuCurinst_Parameters0 = cpuGetByte(cpuProgramCounter++); cpuClock = cpuClock + 0 + cpuCurinst_ExtraTiming
    }; cpuOpArray[51] = function () { cpuCurinst_AddressingMode = 1; cpuClock = cpuClock + 0 + cpuCurinst_ExtraTiming }; cpuOpArray[52] = function () { cpuCurinst_AddressingMode = 5; cpuCurinst_Parameters0 = cpuGetByte(cpuProgramCounter++); cpuCurinst_AddressingMode === 9 && decodeAddress(); cpuClock = cpuClock + 3 + cpuCurinst_ExtraTiming }; cpuOpArray[53] = function () {
        cpuCurinst_AddressingMode = 5; cpuCurinst_Parameters0 = cpuGetByte(cpuProgramCounter++);
        cpuAccumulator &= decodeOperand(); _setZNFlags(cpuAccumulator); cpuClock = cpuClock + 3 + cpuCurinst_ExtraTiming
    }; cpuOpArray[54] = function () { cpuCurinst_AddressingMode = 5; cpuCurinst_Parameters0 = cpuGetByte(cpuProgramCounter++); var a = decodeOperand(), b = 0; cpuGetFlag(1) && (b = 1); cpuSetFlag(1, (a & 128) === 128); a <<= 1; a &= 255; a |= b; _setZNFlags(a); cpuCurinst_AddressingMode === 2 ? cpuAccumulator = a : cpuSetByte(decodeAddress(), a); cpuClock = cpuClock + 6 + cpuCurinst_ExtraTiming }; cpuOpArray[55] = function () {
        cpuCurinst_AddressingMode = 1; cpuClock =
cpuClock + 0 + cpuCurinst_ExtraTiming
    }; cpuOpArray[56] = function () { cpuCurinst_AddressingMode = 1; cpuSetFlag(1, !0); cpuClock = cpuClock + 2 + cpuCurinst_ExtraTiming }; cpuOpArray[57] = function () { cpuCurinst_AddressingMode = 10; cpuCurinst_Parameters0 = cpuGetByte(cpuProgramCounter++); cpuCurinst_Parameters1 = cpuGetByte(cpuProgramCounter++); cpuAccumulator &= decodeOperand(); _setZNFlags(cpuAccumulator); cpuClock = cpuClock + 4 + cpuCurinst_ExtraTiming }; cpuOpArray[58] = function () {
        cpuCurinst_AddressingMode = 1; cpuCurinst_AddressingMode ===
9 && decodeAddress(); cpuClock = cpuClock + 2 + cpuCurinst_ExtraTiming
    }; cpuOpArray[59] = function () { cpuCurinst_AddressingMode = 1; cpuClock = cpuClock + 0 + cpuCurinst_ExtraTiming }; cpuOpArray[60] = function () { cpuCurinst_AddressingMode = 9; cpuCurinst_Parameters0 = cpuGetByte(cpuProgramCounter++); cpuCurinst_Parameters1 = cpuGetByte(cpuProgramCounter++); cpuCurinst_AddressingMode === 9 && decodeAddress(); cpuClock = cpuClock + 6 + cpuCurinst_ExtraTiming }; cpuOpArray[61] = function () {
        cpuCurinst_AddressingMode = 9; cpuCurinst_Parameters0 = cpuGetByte(cpuProgramCounter++);
        cpuCurinst_Parameters1 = cpuGetByte(cpuProgramCounter++); cpuAccumulator &= decodeOperand(); _setZNFlags(cpuAccumulator); cpuClock = cpuClock + 4 + cpuCurinst_ExtraTiming
    }; cpuOpArray[62] = function () {
        cpuCurinst_AddressingMode = 9; cpuCurinst_Parameters0 = cpuGetByte(cpuProgramCounter++); cpuCurinst_Parameters1 = cpuGetByte(cpuProgramCounter++); var a = decodeOperand(), b = 0; cpuGetFlag(1) && (b = 1); cpuSetFlag(1, (a & 128) === 128); a <<= 1; a &= 255; a |= b; _setZNFlags(a); cpuCurinst_AddressingMode === 2 ? cpuAccumulator = a : cpuSetByte(decodeAddress(),
a); cpuClock = cpuClock + 7 + cpuCurinst_ExtraTiming
    }; cpuOpArray[63] = function () { cpuCurinst_AddressingMode = 1; cpuClock = cpuClock + 0 + cpuCurinst_ExtraTiming }; cpuOpArray[64] = function () { cpuCurinst_AddressingMode = 1; cpuStatusRegister = cpuPopStack(); var a = cpuPopStack(); cpuProgramCounter = 256 * cpuPopStack() + a; cpuClock = cpuClock + 6 + cpuCurinst_ExtraTiming }; cpuOpArray[65] = function () {
        cpuCurinst_AddressingMode = 12; cpuCurinst_Parameters0 = cpuGetByte(cpuProgramCounter++); cpuAccumulator ^= decodeOperand(); _setZNFlags(cpuAccumulator);
        cpuClock = cpuClock + 6 + cpuCurinst_ExtraTiming
    }; cpuOpArray[66] = function () { cpuCurinst_AddressingMode = 1; cpuClock = cpuClock + 0 + cpuCurinst_ExtraTiming }; cpuOpArray[67] = function () { cpuCurinst_AddressingMode = 1; cpuClock = cpuClock + 0 + cpuCurinst_ExtraTiming }; cpuOpArray[68] = function () { cpuCurinst_AddressingMode = 1; cpuCurinst_AddressingMode === 9 && decodeAddress(); cpuClock = cpuClock + 3 + cpuCurinst_ExtraTiming }; cpuOpArray[69] = function () {
        cpuCurinst_AddressingMode = 4; cpuCurinst_Parameters0 = cpuGetByte(cpuProgramCounter++); cpuAccumulator ^=
decodeOperand(); _setZNFlags(cpuAccumulator); cpuClock = cpuClock + 2 + cpuCurinst_ExtraTiming
    }; cpuOpArray[70] = function () { cpuCurinst_AddressingMode = 4; cpuCurinst_Parameters0 = cpuGetByte(cpuProgramCounter++); var a = decodeOperand(); cpuSetFlag(1, (a & 1) === 1); a = a >> 1 & 255; _setZNFlags(a); cpuCurinst_AddressingMode === 2 ? cpuAccumulator = a : cpuSetByte(decodeAddress(), a); cpuClock = cpuClock + 5 + cpuCurinst_ExtraTiming }; cpuOpArray[71] = function () { cpuCurinst_AddressingMode = 1; cpuClock = cpuClock + 0 + cpuCurinst_ExtraTiming }; cpuOpArray[72] =
function () { cpuCurinst_AddressingMode = 1; cpuPushStack(cpuAccumulator); cpuClock = cpuClock + 3 + cpuCurinst_ExtraTiming }; cpuOpArray[73] = function () { cpuCurinst_AddressingMode = 3; cpuCurinst_Parameters0 = cpuGetByte(cpuProgramCounter++); cpuAccumulator ^= decodeOperand(); _setZNFlags(cpuAccumulator); cpuClock = cpuClock + 2 + cpuCurinst_ExtraTiming }; cpuOpArray[74] = function () {
    cpuCurinst_AddressingMode = 2; var a = decodeOperand(); cpuSetFlag(1, (a & 1) === 1); a = a >> 1 & 255; _setZNFlags(a); cpuCurinst_AddressingMode === 2 ? cpuAccumulator = a : cpuSetByte(decodeAddress(),
a); cpuClock = cpuClock + 2 + cpuCurinst_ExtraTiming
}; cpuOpArray[75] = function () { cpuCurinst_AddressingMode = 1; cpuClock = cpuClock + 0 + cpuCurinst_ExtraTiming }; cpuOpArray[76] = function () { cpuCurinst_AddressingMode = 8; cpuCurinst_Parameters0 = cpuGetByte(cpuProgramCounter++); cpuCurinst_Parameters1 = cpuGetByte(cpuProgramCounter++); cpuProgramCounter = cpuCurinst_AddressingMode === 11 && cpuCurinst_Parameters0 === 255 ? 255 | cpuCurinst_Parameters1 << 8 : decodeAddress(); cpuClock = cpuClock + 3 + cpuCurinst_ExtraTiming }; cpuOpArray[77] = function () {
    cpuCurinst_AddressingMode =
8; cpuCurinst_Parameters0 = cpuGetByte(cpuProgramCounter++); cpuCurinst_Parameters1 = cpuGetByte(cpuProgramCounter++); cpuAccumulator ^= decodeOperand(); _setZNFlags(cpuAccumulator); cpuClock = cpuClock + 4 + cpuCurinst_ExtraTiming
}; cpuOpArray[78] = function () {
    cpuCurinst_AddressingMode = 8; cpuCurinst_Parameters0 = cpuGetByte(cpuProgramCounter++); cpuCurinst_Parameters1 = cpuGetByte(cpuProgramCounter++); var a = decodeOperand(); cpuSetFlag(1, (a & 1) === 1); a = a >> 1 & 255; _setZNFlags(a); cpuCurinst_AddressingMode === 2 ? cpuAccumulator = a : cpuSetByte(decodeAddress(),
a); cpuClock = cpuClock + 6 + cpuCurinst_ExtraTiming
}; cpuOpArray[79] = function () { cpuCurinst_AddressingMode = 1; cpuClock = cpuClock + 0 + cpuCurinst_ExtraTiming }; cpuOpArray[80] = function () { cpuCurinst_AddressingMode = 7; cpuCurinst_Parameters0 = cpuGetByte(cpuProgramCounter++); if ((cpuStatusRegister & 64) !== 64) { cpuCurinst_ExtraTiming = 1; var a = cpuCurinst_Parameters0 & 255; (a & 128) === 128 && (a -= 256); cpuProgramCounter += a; (cpuProgramCounter & 255) < a && (cpuCurinst_ExtraTiming = 2) } cpuClock = cpuClock + 2 + cpuCurinst_ExtraTiming }; cpuOpArray[81] =
function () { cpuCurinst_AddressingMode = 13; cpuCurinst_Parameters0 = cpuGetByte(cpuProgramCounter++); cpuAccumulator ^= decodeOperand(); _setZNFlags(cpuAccumulator); cpuClock = cpuClock + 5 + cpuCurinst_ExtraTiming }; cpuOpArray[82] = function () { cpuCurinst_AddressingMode = 14; cpuCurinst_Parameters0 = cpuGetByte(cpuProgramCounter++); cpuClock = cpuClock + 0 + cpuCurinst_ExtraTiming }; cpuOpArray[83] = function () { cpuCurinst_AddressingMode = 1; cpuClock = cpuClock + 0 + cpuCurinst_ExtraTiming }; cpuOpArray[84] = function () {
    cpuCurinst_AddressingMode =
1; cpuClock = cpuClock + 0 + cpuCurinst_ExtraTiming
}; cpuOpArray[85] = function () { cpuCurinst_AddressingMode = 5; cpuCurinst_Parameters0 = cpuGetByte(cpuProgramCounter++); cpuAccumulator ^= decodeOperand(); _setZNFlags(cpuAccumulator); cpuClock = cpuClock + 3 + cpuCurinst_ExtraTiming }; cpuOpArray[86] = function () {
    cpuCurinst_AddressingMode = 5; cpuCurinst_Parameters0 = cpuGetByte(cpuProgramCounter++); var a = decodeOperand(); cpuSetFlag(1, (a & 1) === 1); a = a >> 1 & 255; _setZNFlags(a); cpuCurinst_AddressingMode === 2 ? cpuAccumulator = a : cpuSetByte(decodeAddress(),
a); cpuClock = cpuClock + 6 + cpuCurinst_ExtraTiming
}; cpuOpArray[87] = function () { cpuCurinst_AddressingMode = 1; cpuClock = cpuClock + 0 + cpuCurinst_ExtraTiming }; cpuOpArray[88] = function () { cpuCurinst_AddressingMode = 1; cpuSetFlag(4, !1); cpuClock = cpuClock + 2 + cpuCurinst_ExtraTiming }; cpuOpArray[89] = function () {
    cpuCurinst_AddressingMode = 10; cpuCurinst_Parameters0 = cpuGetByte(cpuProgramCounter++); cpuCurinst_Parameters1 = cpuGetByte(cpuProgramCounter++); cpuAccumulator ^= decodeOperand(); _setZNFlags(cpuAccumulator); cpuClock = cpuClock +
4 + cpuCurinst_ExtraTiming
}; cpuOpArray[90] = function () { cpuCurinst_AddressingMode = 1; cpuCurinst_AddressingMode === 9 && decodeAddress(); cpuClock = cpuClock + 2 + cpuCurinst_ExtraTiming }; cpuOpArray[91] = function () { cpuCurinst_AddressingMode = 1; cpuClock = cpuClock + 0 + cpuCurinst_ExtraTiming }; cpuOpArray[92] = function () { cpuCurinst_AddressingMode = 1; cpuCurinst_AddressingMode === 9 && decodeAddress(); cpuClock = cpuClock + 6 + cpuCurinst_ExtraTiming }; cpuOpArray[93] = function () {
    cpuCurinst_AddressingMode = 9; cpuCurinst_Parameters0 = cpuGetByte(cpuProgramCounter++);
    cpuCurinst_Parameters1 = cpuGetByte(cpuProgramCounter++); cpuAccumulator ^= decodeOperand(); _setZNFlags(cpuAccumulator); cpuClock = cpuClock + 4 + cpuCurinst_ExtraTiming
}; cpuOpArray[94] = function () { cpuCurinst_AddressingMode = 9; cpuCurinst_Parameters0 = cpuGetByte(cpuProgramCounter++); cpuCurinst_Parameters1 = cpuGetByte(cpuProgramCounter++); var a = decodeOperand(); cpuSetFlag(1, (a & 1) === 1); a = a >> 1 & 255; _setZNFlags(a); cpuCurinst_AddressingMode === 2 ? cpuAccumulator = a : cpuSetByte(decodeAddress(), a); cpuClock = cpuClock + 6 + cpuCurinst_ExtraTiming };
    cpuOpArray[95] = function () { cpuCurinst_AddressingMode = 1; cpuClock = cpuClock + 0 + cpuCurinst_ExtraTiming }; cpuOpArray[96] = function () { cpuCurinst_AddressingMode = 1; var a; a = cpuPopStack() + 1 & 255; cpuProgramCounter = cpuPopStack() << 8 | a; cpuClock = cpuClock + 6 + cpuCurinst_ExtraTiming }; cpuOpArray[97] = function () {
        cpuCurinst_AddressingMode = 12; cpuCurinst_Parameters0 = cpuGetByte(cpuProgramCounter++); var a = decodeOperand(), b = cpuAccumulator + a + (cpuStatusRegister & 1); cpuSetFlag(1, b > 255); cpuSetFlag(NES.CPU.Fastendo.CPUStatusMasks.overflowMask,
((cpuAccumulator ^ a) & 128) !== 128 && ((cpuAccumulator ^ b) & 128) === 128); cpuAccumulator = b & 255; _setZNFlags(cpuAccumulator); cpuClock = cpuClock + 6 + cpuCurinst_ExtraTiming
    }; cpuOpArray[98] = function () { cpuCurinst_AddressingMode = 1; cpuClock = cpuClock + 0 + cpuCurinst_ExtraTiming }; cpuOpArray[99] = function () { cpuCurinst_AddressingMode = 1; cpuClock = cpuClock + 0 + cpuCurinst_ExtraTiming }; cpuOpArray[100] = function () {
        cpuCurinst_AddressingMode = 4; cpuCurinst_Parameters0 = cpuGetByte(cpuProgramCounter++); cpuCurinst_AddressingMode === 9 && decodeAddress();
        cpuClock = cpuClock + 3 + cpuCurinst_ExtraTiming
    }; cpuOpArray[101] = function () { cpuCurinst_AddressingMode = 4; cpuCurinst_Parameters0 = cpuGetByte(cpuProgramCounter++); var a = decodeOperand(), b = cpuAccumulator + a + (cpuStatusRegister & 1); cpuSetFlag(1, b > 255); cpuSetFlag(NES.CPU.Fastendo.CPUStatusMasks.overflowMask, ((cpuAccumulator ^ a) & 128) !== 128 && ((cpuAccumulator ^ b) & 128) === 128); cpuAccumulator = b & 255; _setZNFlags(cpuAccumulator); cpuClock = cpuClock + 3 + cpuCurinst_ExtraTiming }; cpuOpArray[102] = function () {
        cpuCurinst_AddressingMode =
4; cpuCurinst_Parameters0 = cpuGetByte(cpuProgramCounter++); var a = decodeOperand(), b = 0; cpuGetFlag(1) && (b = 128); cpuSetFlag(1, (a & 1) === 1); a = a >> 1 | b; _setZNFlags(a); cpuCurinst_AddressingMode === 2 ? cpuAccumulator = a : cpuSetByte(decodeAddress(), a); cpuClock = cpuClock + 5 + cpuCurinst_ExtraTiming
    }; cpuOpArray[103] = function () { cpuCurinst_AddressingMode = 1; cpuClock = cpuClock + 0 + cpuCurinst_ExtraTiming }; cpuOpArray[104] = function () {
        cpuCurinst_AddressingMode = 1; cpuAccumulator = cpuPopStack(); _setZNFlags(cpuAccumulator); cpuClock = cpuClock +
3 + cpuCurinst_ExtraTiming
    }; cpuOpArray[105] = function () { cpuCurinst_AddressingMode = 3; cpuCurinst_Parameters0 = cpuGetByte(cpuProgramCounter++); var a = decodeOperand(), b = cpuAccumulator + a + (cpuStatusRegister & 1); cpuSetFlag(1, b > 255); cpuSetFlag(NES.CPU.Fastendo.CPUStatusMasks.overflowMask, ((cpuAccumulator ^ a) & 128) !== 128 && ((cpuAccumulator ^ b) & 128) === 128); cpuAccumulator = b & 255; _setZNFlags(cpuAccumulator); cpuClock = cpuClock + 2 + cpuCurinst_ExtraTiming }; cpuOpArray[106] = function () {
        cpuCurinst_AddressingMode = 2; var a = decodeOperand(),
b = 0; cpuGetFlag(1) && (b = 128); cpuSetFlag(1, (a & 1) === 1); a = a >> 1 | b; _setZNFlags(a); cpuCurinst_AddressingMode === 2 ? cpuAccumulator = a : cpuSetByte(decodeAddress(), a); cpuClock = cpuClock + 2 + cpuCurinst_ExtraTiming
    }; cpuOpArray[107] = function () { cpuCurinst_AddressingMode = 1; cpuClock = cpuClock + 0 + cpuCurinst_ExtraTiming }; cpuOpArray[108] = function () {
        cpuCurinst_AddressingMode = 11; cpuCurinst_Parameters0 = cpuGetByte(cpuProgramCounter++); cpuCurinst_Parameters1 = cpuGetByte(cpuProgramCounter++); cpuProgramCounter = cpuCurinst_AddressingMode ===
11 && cpuCurinst_Parameters0 === 255 ? 255 | cpuCurinst_Parameters1 << 8 : decodeAddress(); cpuClock = cpuClock + 5 + cpuCurinst_ExtraTiming
    }; cpuOpArray[109] = function () {
        cpuCurinst_AddressingMode = 8; cpuCurinst_Parameters0 = cpuGetByte(cpuProgramCounter++); cpuCurinst_Parameters1 = cpuGetByte(cpuProgramCounter++); var a = decodeOperand(), b = cpuAccumulator + a + (cpuStatusRegister & 1); cpuSetFlag(1, b > 255); cpuSetFlag(NES.CPU.Fastendo.CPUStatusMasks.overflowMask, ((cpuAccumulator ^ a) & 128) !== 128 && ((cpuAccumulator ^ b) & 128) === 128); cpuAccumulator =
b & 255; _setZNFlags(cpuAccumulator); cpuClock = cpuClock + 4 + cpuCurinst_ExtraTiming
    }; cpuOpArray[110] = function () { cpuCurinst_AddressingMode = 8; cpuCurinst_Parameters0 = cpuGetByte(cpuProgramCounter++); cpuCurinst_Parameters1 = cpuGetByte(cpuProgramCounter++); var a = decodeOperand(), b = 0; cpuGetFlag(1) && (b = 128); cpuSetFlag(1, (a & 1) === 1); a = a >> 1 | b; _setZNFlags(a); cpuCurinst_AddressingMode === 2 ? cpuAccumulator = a : cpuSetByte(decodeAddress(), a); cpuClock = cpuClock + 6 + cpuCurinst_ExtraTiming }; cpuOpArray[111] = function () {
        cpuCurinst_AddressingMode =
1; cpuClock = cpuClock + 0 + cpuCurinst_ExtraTiming
    }; cpuOpArray[112] = function () { cpuCurinst_AddressingMode = 7; cpuCurinst_Parameters0 = cpuGetByte(cpuProgramCounter++); if ((cpuStatusRegister & 64) === 64) { cpuCurinst_ExtraTiming = 1; var a = cpuCurinst_Parameters0 & 255; (a & 128) === 128 && (a -= 256); cpuProgramCounter += a; (cpuProgramCounter & 255) < a && (cpuCurinst_ExtraTiming = 2) } cpuClock = cpuClock + 2 + cpuCurinst_ExtraTiming }; cpuOpArray[113] = function () {
        cpuCurinst_AddressingMode = 13; cpuCurinst_Parameters0 = cpuGetByte(cpuProgramCounter++); var a =
decodeOperand(), b = cpuAccumulator + a + (cpuStatusRegister & 1); cpuSetFlag(1, b > 255); cpuSetFlag(NES.CPU.Fastendo.CPUStatusMasks.overflowMask, ((cpuAccumulator ^ a) & 128) !== 128 && ((cpuAccumulator ^ b) & 128) === 128); cpuAccumulator = b & 255; _setZNFlags(cpuAccumulator); cpuClock = cpuClock + 5 + cpuCurinst_ExtraTiming
    }; cpuOpArray[114] = function () { cpuCurinst_AddressingMode = 14; cpuCurinst_Parameters0 = cpuGetByte(cpuProgramCounter++); cpuClock = cpuClock + 0 + cpuCurinst_ExtraTiming }; cpuOpArray[115] = function () {
        cpuCurinst_AddressingMode = 1; cpuClock =
cpuClock + 0 + cpuCurinst_ExtraTiming
    }; cpuOpArray[116] = function () { cpuCurinst_AddressingMode = 5; cpuCurinst_Parameters0 = cpuGetByte(cpuProgramCounter++); cpuClock = cpuClock + 0 + cpuCurinst_ExtraTiming }; cpuOpArray[117] = function () {
        cpuCurinst_AddressingMode = 5; cpuCurinst_Parameters0 = cpuGetByte(cpuProgramCounter++); var a = decodeOperand(), b = cpuAccumulator + a + (cpuStatusRegister & 1); cpuSetFlag(1, b > 255); cpuSetFlag(NES.CPU.Fastendo.CPUStatusMasks.overflowMask, ((cpuAccumulator ^ a) & 128) !== 128 && ((cpuAccumulator ^ b) & 128) === 128);
        cpuAccumulator = b & 255; _setZNFlags(cpuAccumulator); cpuClock = cpuClock + 4 + cpuCurinst_ExtraTiming
    }; cpuOpArray[118] = function () { cpuCurinst_AddressingMode = 5; cpuCurinst_Parameters0 = cpuGetByte(cpuProgramCounter++); var a = decodeOperand(), b = 0; cpuGetFlag(1) && (b = 128); cpuSetFlag(1, (a & 1) === 1); a = a >> 1 | b; _setZNFlags(a); cpuCurinst_AddressingMode === 2 ? cpuAccumulator = a : cpuSetByte(decodeAddress(), a); cpuClock = cpuClock + 6 + cpuCurinst_ExtraTiming }; cpuOpArray[119] = function () { cpuCurinst_AddressingMode = 1; cpuClock = cpuClock + 0 + cpuCurinst_ExtraTiming };
    cpuOpArray[120] = function () { cpuCurinst_AddressingMode = 1; cpuSetFlag(4, !0); cpuClock = cpuClock + 2 + cpuCurinst_ExtraTiming }; cpuOpArray[121] = function () {
        cpuCurinst_AddressingMode = 10; cpuCurinst_Parameters0 = cpuGetByte(cpuProgramCounter++); cpuCurinst_Parameters1 = cpuGetByte(cpuProgramCounter++); var a = decodeOperand(), b = cpuAccumulator + a + (cpuStatusRegister & 1); cpuSetFlag(1, b > 255); cpuSetFlag(NES.CPU.Fastendo.CPUStatusMasks.overflowMask, ((cpuAccumulator ^ a) & 128) !== 128 && ((cpuAccumulator ^ b) & 128) === 128); cpuAccumulator = b &
255; _setZNFlags(cpuAccumulator); cpuClock = cpuClock + 4 + cpuCurinst_ExtraTiming
    }; cpuOpArray[122] = function () { cpuCurinst_AddressingMode = 1; cpuCurinst_AddressingMode === 9 && decodeAddress(); cpuClock = cpuClock + 2 + cpuCurinst_ExtraTiming }; cpuOpArray[123] = function () { cpuCurinst_AddressingMode = 1; cpuClock = cpuClock + 0 + cpuCurinst_ExtraTiming }; cpuOpArray[124] = function () { cpuCurinst_AddressingMode = 15; cpuCurinst_AddressingMode === 9 && decodeAddress(); cpuClock = cpuClock + 6 + cpuCurinst_ExtraTiming }; cpuOpArray[125] = function () {
        cpuCurinst_AddressingMode =
9; cpuCurinst_Parameters0 = cpuGetByte(cpuProgramCounter++); cpuCurinst_Parameters1 = cpuGetByte(cpuProgramCounter++); var a = decodeOperand(), b = cpuAccumulator + a + (cpuStatusRegister & 1); cpuSetFlag(1, b > 255); cpuSetFlag(NES.CPU.Fastendo.CPUStatusMasks.overflowMask, ((cpuAccumulator ^ a) & 128) !== 128 && ((cpuAccumulator ^ b) & 128) === 128); cpuAccumulator = b & 255; _setZNFlags(cpuAccumulator); cpuClock = cpuClock + 4 + cpuCurinst_ExtraTiming
    }; cpuOpArray[126] = function () {
        cpuCurinst_AddressingMode = 9; cpuCurinst_Parameters0 = cpuGetByte(cpuProgramCounter++);
        cpuCurinst_Parameters1 = cpuGetByte(cpuProgramCounter++); var a = decodeOperand(), b = 0; cpuGetFlag(1) && (b = 128); cpuSetFlag(1, (a & 1) === 1); a = a >> 1 | b; _setZNFlags(a); cpuCurinst_AddressingMode === 2 ? cpuAccumulator = a : cpuSetByte(decodeAddress(), a); cpuClock = cpuClock + 7 + cpuCurinst_ExtraTiming
    }; cpuOpArray[127] = function () { cpuCurinst_AddressingMode = 1; cpuClock = cpuClock + 0 + cpuCurinst_ExtraTiming }; cpuOpArray[128] = function () {
        cpuCurinst_AddressingMode = 7; cpuCurinst_Parameters0 = cpuGetByte(cpuProgramCounter++); cpuCurinst_AddressingMode ===
9 && decodeAddress(); cpuClock = cpuClock + 3 + cpuCurinst_ExtraTiming
    }; cpuOpArray[129] = function () { cpuCurinst_AddressingMode = 12; cpuCurinst_Parameters0 = cpuGetByte(cpuProgramCounter++); cpuSetByte(decodeAddress(), cpuAccumulator); cpuClock = cpuClock + 6 + cpuCurinst_ExtraTiming }; cpuOpArray[130] = function () { cpuCurinst_AddressingMode = 1; cpuCurinst_AddressingMode === 9 && decodeAddress(); cpuClock = cpuClock + 3 + cpuCurinst_ExtraTiming }; cpuOpArray[131] = function () { cpuCurinst_AddressingMode = 1; cpuClock = cpuClock + 0 + cpuCurinst_ExtraTiming };
    cpuOpArray[132] = function () { cpuCurinst_AddressingMode = 4; cpuCurinst_Parameters0 = cpuGetByte(cpuProgramCounter++); cpuSetByte(decodeAddress(), cpuIndexRegisterY); cpuClock = cpuClock + 3 + cpuCurinst_ExtraTiming }; cpuOpArray[133] = function () { cpuCurinst_AddressingMode = 4; cpuCurinst_Parameters0 = cpuGetByte(cpuProgramCounter++); cpuSetByte(decodeAddress(), cpuAccumulator); cpuClock = cpuClock + 3 + cpuCurinst_ExtraTiming }; cpuOpArray[134] = function () {
        cpuCurinst_AddressingMode = 4; cpuCurinst_Parameters0 = cpuGetByte(cpuProgramCounter++);
        cpuSetByte(decodeAddress(), cpuIndexRegisterX); cpuClock = cpuClock + 3 + cpuCurinst_ExtraTiming
    }; cpuOpArray[135] = function () { cpuCurinst_AddressingMode = 1; cpuClock = cpuClock + 0 + cpuCurinst_ExtraTiming }; cpuOpArray[136] = function () { cpuCurinst_AddressingMode = 1; cpuIndexRegisterY -= 1; cpuIndexRegisterY &= 255; _setZNFlags(cpuIndexRegisterY); cpuClock = cpuClock + 2 + cpuCurinst_ExtraTiming }; cpuOpArray[137] = function () {
        cpuCurinst_AddressingMode = 3; cpuCurinst_Parameters0 = cpuGetByte(cpuProgramCounter++); cpuCurinst_AddressingMode ===
9 && decodeAddress(); cpuClock = cpuClock + 3 + cpuCurinst_ExtraTiming
    }; cpuOpArray[138] = function () { cpuCurinst_AddressingMode = 1; cpuAccumulator = cpuIndexRegisterX; _setZNFlags(cpuAccumulator); cpuClock = cpuClock + 2 + cpuCurinst_ExtraTiming }; cpuOpArray[139] = function () { cpuCurinst_AddressingMode = 1; cpuClock = cpuClock + 0 + cpuCurinst_ExtraTiming }; cpuOpArray[140] = function () {
        cpuCurinst_AddressingMode = 8; cpuCurinst_Parameters0 = cpuGetByte(cpuProgramCounter++); cpuCurinst_Parameters1 = cpuGetByte(cpuProgramCounter++); cpuSetByte(decodeAddress(),
cpuIndexRegisterY); cpuClock = cpuClock + 4 + cpuCurinst_ExtraTiming
    }; cpuOpArray[141] = function () { cpuCurinst_AddressingMode = 8; cpuCurinst_Parameters0 = cpuGetByte(cpuProgramCounter++); cpuCurinst_Parameters1 = cpuGetByte(cpuProgramCounter++); cpuSetByte(decodeAddress(), cpuAccumulator); cpuClock = cpuClock + 4 + cpuCurinst_ExtraTiming }; cpuOpArray[142] = function () {
        cpuCurinst_AddressingMode = 8; cpuCurinst_Parameters0 = cpuGetByte(cpuProgramCounter++); cpuCurinst_Parameters1 = cpuGetByte(cpuProgramCounter++); cpuSetByte(decodeAddress(),
cpuIndexRegisterX); cpuClock = cpuClock + 4 + cpuCurinst_ExtraTiming
    }; cpuOpArray[143] = function () { cpuCurinst_AddressingMode = 1; cpuClock = cpuClock + 0 + cpuCurinst_ExtraTiming }; cpuOpArray[144] = function () { cpuCurinst_AddressingMode = 7; cpuCurinst_Parameters0 = cpuGetByte(cpuProgramCounter++); if ((cpuStatusRegister & 1) !== 1) { cpuCurinst_ExtraTiming = 1; var a = cpuCurinst_Parameters0 & 255; (a & 128) === 128 && (a -= 256); cpuProgramCounter += a; (cpuProgramCounter & 255) < a && (cpuCurinst_ExtraTiming = 2) } cpuClock = cpuClock + 2 + cpuCurinst_ExtraTiming };
    cpuOpArray[145] = function () { cpuCurinst_AddressingMode = 13; cpuCurinst_Parameters0 = cpuGetByte(cpuProgramCounter++); cpuSetByte(decodeAddress(), cpuAccumulator); cpuClock = cpuClock + 6 + cpuCurinst_ExtraTiming }; cpuOpArray[146] = function () { cpuCurinst_AddressingMode = 14; cpuCurinst_Parameters0 = cpuGetByte(cpuProgramCounter++); cpuClock = cpuClock + 0 + cpuCurinst_ExtraTiming }; cpuOpArray[147] = function () { cpuCurinst_AddressingMode = 1; cpuClock = cpuClock + 0 + cpuCurinst_ExtraTiming }; cpuOpArray[148] = function () {
        cpuCurinst_AddressingMode =
5; cpuCurinst_Parameters0 = cpuGetByte(cpuProgramCounter++); cpuSetByte(decodeAddress(), cpuIndexRegisterY); cpuClock = cpuClock + 4 + cpuCurinst_ExtraTiming
    }; cpuOpArray[149] = function () { cpuCurinst_AddressingMode = 5; cpuCurinst_Parameters0 = cpuGetByte(cpuProgramCounter++); cpuSetByte(decodeAddress(), cpuAccumulator); cpuClock = cpuClock + 4 + cpuCurinst_ExtraTiming }; cpuOpArray[150] = function () {
        cpuCurinst_AddressingMode = 6; cpuCurinst_Parameters0 = cpuGetByte(cpuProgramCounter++); cpuSetByte(decodeAddress(), cpuIndexRegisterX); cpuClock =
cpuClock + 4 + cpuCurinst_ExtraTiming
    }; cpuOpArray[151] = function () { cpuCurinst_AddressingMode = 1; cpuClock = cpuClock + 0 + cpuCurinst_ExtraTiming }; cpuOpArray[152] = function () { cpuCurinst_AddressingMode = 1; cpuAccumulator = cpuIndexRegisterY; _setZNFlags(cpuAccumulator); cpuClock = cpuClock + 2 + cpuCurinst_ExtraTiming }; cpuOpArray[153] = function () {
        cpuCurinst_AddressingMode = 10; cpuCurinst_Parameters0 = cpuGetByte(cpuProgramCounter++); cpuCurinst_Parameters1 = cpuGetByte(cpuProgramCounter++); cpuSetByte(decodeAddress(), cpuAccumulator);
        cpuClock = cpuClock + 5 + cpuCurinst_ExtraTiming
    }; cpuOpArray[154] = function () { cpuCurinst_AddressingMode = 1; cpuStackPointer = cpuIndexRegisterX; cpuClock = cpuClock + 2 + cpuCurinst_ExtraTiming }; cpuOpArray[155] = function () { cpuCurinst_AddressingMode = 1; cpuClock = cpuClock + 0 + cpuCurinst_ExtraTiming }; cpuOpArray[156] = function () { cpuCurinst_AddressingMode = 8; cpuCurinst_Parameters0 = cpuGetByte(cpuProgramCounter++); cpuCurinst_Parameters1 = cpuGetByte(cpuProgramCounter++); cpuClock = cpuClock + 0 + cpuCurinst_ExtraTiming }; cpuOpArray[157] =
function () { cpuCurinst_AddressingMode = 9; cpuCurinst_Parameters0 = cpuGetByte(cpuProgramCounter++); cpuCurinst_Parameters1 = cpuGetByte(cpuProgramCounter++); cpuSetByte(decodeAddress(), cpuAccumulator); cpuClock = cpuClock + 5 + cpuCurinst_ExtraTiming }; cpuOpArray[158] = function () { cpuCurinst_AddressingMode = 9; cpuCurinst_Parameters0 = cpuGetByte(cpuProgramCounter++); cpuCurinst_Parameters1 = cpuGetByte(cpuProgramCounter++); cpuClock = cpuClock + 0 + cpuCurinst_ExtraTiming }; cpuOpArray[159] = function () {
    cpuCurinst_AddressingMode = 1; cpuClock =
cpuClock + 0 + cpuCurinst_ExtraTiming
}; cpuOpArray[160] = function () { cpuCurinst_AddressingMode = 3; cpuCurinst_Parameters0 = cpuGetByte(cpuProgramCounter++); cpuIndexRegisterY = decodeOperand(); _setZNFlags(cpuIndexRegisterY); cpuClock = cpuClock + 2 + cpuCurinst_ExtraTiming }; cpuOpArray[161] = function () { cpuCurinst_AddressingMode = 12; cpuCurinst_Parameters0 = cpuGetByte(cpuProgramCounter++); cpuAccumulator = decodeOperand(); _setZNFlags(cpuAccumulator); cpuClock = cpuClock + 6 + cpuCurinst_ExtraTiming }; cpuOpArray[162] = function () {
    cpuCurinst_AddressingMode =
3; cpuCurinst_Parameters0 = cpuGetByte(cpuProgramCounter++); cpuIndexRegisterX = decodeOperand(); _setZNFlags(cpuIndexRegisterX); cpuClock = cpuClock + 2 + cpuCurinst_ExtraTiming
}; cpuOpArray[163] = function () { cpuCurinst_AddressingMode = 1; cpuClock = cpuClock + 0 + cpuCurinst_ExtraTiming }; cpuOpArray[164] = function () { cpuCurinst_AddressingMode = 4; cpuCurinst_Parameters0 = cpuGetByte(cpuProgramCounter++); cpuIndexRegisterY = decodeOperand(); _setZNFlags(cpuIndexRegisterY); cpuClock = cpuClock + 3 + cpuCurinst_ExtraTiming }; cpuOpArray[165] = function () {
    cpuCurinst_AddressingMode =
4; cpuCurinst_Parameters0 = cpuGetByte(cpuProgramCounter++); cpuAccumulator = decodeOperand(); _setZNFlags(cpuAccumulator); cpuClock = cpuClock + 3 + cpuCurinst_ExtraTiming
}; cpuOpArray[166] = function () { cpuCurinst_AddressingMode = 4; cpuCurinst_Parameters0 = cpuGetByte(cpuProgramCounter++); cpuIndexRegisterX = decodeOperand(); _setZNFlags(cpuIndexRegisterX); cpuClock = cpuClock + 3 + cpuCurinst_ExtraTiming }; cpuOpArray[167] = function () { cpuCurinst_AddressingMode = 1; cpuClock = cpuClock + 0 + cpuCurinst_ExtraTiming }; cpuOpArray[168] = function () {
    cpuCurinst_AddressingMode =
1; cpuIndexRegisterY = cpuAccumulator; _setZNFlags(cpuIndexRegisterY); cpuClock = cpuClock + 2 + cpuCurinst_ExtraTiming
}; cpuOpArray[169] = function () { cpuCurinst_AddressingMode = 3; cpuCurinst_Parameters0 = cpuGetByte(cpuProgramCounter++); cpuAccumulator = decodeOperand(); _setZNFlags(cpuAccumulator); cpuClock = cpuClock + 2 + cpuCurinst_ExtraTiming }; cpuOpArray[170] = function () { cpuCurinst_AddressingMode = 1; cpuIndexRegisterX = cpuAccumulator; _setZNFlags(cpuIndexRegisterX); cpuClock = cpuClock + 2 + cpuCurinst_ExtraTiming }; cpuOpArray[171] =
function () { cpuCurinst_AddressingMode = 1; cpuClock = cpuClock + 0 + cpuCurinst_ExtraTiming }; cpuOpArray[172] = function () { cpuCurinst_AddressingMode = 8; cpuCurinst_Parameters0 = cpuGetByte(cpuProgramCounter++); cpuCurinst_Parameters1 = cpuGetByte(cpuProgramCounter++); cpuIndexRegisterY = decodeOperand(); _setZNFlags(cpuIndexRegisterY); cpuClock = cpuClock + 4 + cpuCurinst_ExtraTiming }; cpuOpArray[173] = function () {
    cpuCurinst_AddressingMode = 8; cpuCurinst_Parameters0 = cpuGetByte(cpuProgramCounter++); cpuCurinst_Parameters1 = cpuGetByte(cpuProgramCounter++);
    cpuAccumulator = decodeOperand(); _setZNFlags(cpuAccumulator); cpuClock = cpuClock + 4 + cpuCurinst_ExtraTiming
}; cpuOpArray[174] = function () { cpuCurinst_AddressingMode = 8; cpuCurinst_Parameters0 = cpuGetByte(cpuProgramCounter++); cpuCurinst_Parameters1 = cpuGetByte(cpuProgramCounter++); cpuIndexRegisterX = decodeOperand(); _setZNFlags(cpuIndexRegisterX); cpuClock = cpuClock + 4 + cpuCurinst_ExtraTiming }; cpuOpArray[175] = function () { cpuCurinst_AddressingMode = 1; cpuClock = cpuClock + 0 + cpuCurinst_ExtraTiming }; cpuOpArray[176] = function () {
    cpuCurinst_AddressingMode =
7; cpuCurinst_Parameters0 = cpuGetByte(cpuProgramCounter++); if ((cpuStatusRegister & 1) === 1) { cpuCurinst_ExtraTiming = 1; var a = cpuCurinst_Parameters0 & 255; (a & 128) === 128 && (a -= 256); cpuProgramCounter += a; (cpuProgramCounter & 255) < a && (cpuCurinst_ExtraTiming = 2) } cpuClock = cpuClock + 2 + cpuCurinst_ExtraTiming
}; cpuOpArray[177] = function () { cpuCurinst_AddressingMode = 13; cpuCurinst_Parameters0 = cpuGetByte(cpuProgramCounter++); cpuAccumulator = decodeOperand(); _setZNFlags(cpuAccumulator); cpuClock = cpuClock + 5 + cpuCurinst_ExtraTiming };
    cpuOpArray[178] = function () { cpuCurinst_AddressingMode = 14; cpuCurinst_Parameters0 = cpuGetByte(cpuProgramCounter++); cpuClock = cpuClock + 0 + cpuCurinst_ExtraTiming }; cpuOpArray[179] = function () { cpuCurinst_AddressingMode = 1; cpuClock = cpuClock + 0 + cpuCurinst_ExtraTiming }; cpuOpArray[180] = function () { cpuCurinst_AddressingMode = 5; cpuCurinst_Parameters0 = cpuGetByte(cpuProgramCounter++); cpuIndexRegisterY = decodeOperand(); _setZNFlags(cpuIndexRegisterY); cpuClock = cpuClock + 4 + cpuCurinst_ExtraTiming }; cpuOpArray[181] = function () {
        cpuCurinst_AddressingMode =
5; cpuCurinst_Parameters0 = cpuGetByte(cpuProgramCounter++); cpuAccumulator = decodeOperand(); _setZNFlags(cpuAccumulator); cpuClock = cpuClock + 4 + cpuCurinst_ExtraTiming
    }; cpuOpArray[182] = function () { cpuCurinst_AddressingMode = 6; cpuCurinst_Parameters0 = cpuGetByte(cpuProgramCounter++); cpuIndexRegisterX = decodeOperand(); _setZNFlags(cpuIndexRegisterX); cpuClock = cpuClock + 4 + cpuCurinst_ExtraTiming }; cpuOpArray[183] = function () { cpuCurinst_AddressingMode = 1; cpuClock = cpuClock + 0 + cpuCurinst_ExtraTiming }; cpuOpArray[184] = function () {
        cpuCurinst_AddressingMode =
1; cpuSetFlag(NES.CPU.Fastendo.CPUStatusMasks.overflowMask, !1); cpuClock = cpuClock + 2 + cpuCurinst_ExtraTiming
    }; cpuOpArray[185] = function () { cpuCurinst_AddressingMode = 10; cpuCurinst_Parameters0 = cpuGetByte(cpuProgramCounter++); cpuCurinst_Parameters1 = cpuGetByte(cpuProgramCounter++); cpuAccumulator = decodeOperand(); _setZNFlags(cpuAccumulator); cpuClock = cpuClock + 4 + cpuCurinst_ExtraTiming }; cpuOpArray[186] = function () {
        cpuCurinst_AddressingMode = 1; cpuIndexRegisterX = cpuStackPointer; _setZNFlags(cpuIndexRegisterX); cpuClock =
cpuClock + 2 + cpuCurinst_ExtraTiming
    }; cpuOpArray[187] = function () { cpuCurinst_AddressingMode = 1; cpuClock = cpuClock + 0 + cpuCurinst_ExtraTiming }; cpuOpArray[188] = function () { cpuCurinst_AddressingMode = 9; cpuCurinst_Parameters0 = cpuGetByte(cpuProgramCounter++); cpuCurinst_Parameters1 = cpuGetByte(cpuProgramCounter++); cpuIndexRegisterY = decodeOperand(); _setZNFlags(cpuIndexRegisterY); cpuClock = cpuClock + 4 + cpuCurinst_ExtraTiming }; cpuOpArray[189] = function () {
        cpuCurinst_AddressingMode = 9; cpuCurinst_Parameters0 = cpuGetByte(cpuProgramCounter++);
        cpuCurinst_Parameters1 = cpuGetByte(cpuProgramCounter++); cpuAccumulator = decodeOperand(); _setZNFlags(cpuAccumulator); cpuClock = cpuClock + 4 + cpuCurinst_ExtraTiming
    }; cpuOpArray[190] = function () { cpuCurinst_AddressingMode = 10; cpuCurinst_Parameters0 = cpuGetByte(cpuProgramCounter++); cpuCurinst_Parameters1 = cpuGetByte(cpuProgramCounter++); cpuIndexRegisterX = decodeOperand(); _setZNFlags(cpuIndexRegisterX); cpuClock = cpuClock + 4 + cpuCurinst_ExtraTiming }; cpuOpArray[191] = function () {
        cpuCurinst_AddressingMode = 1; cpuClock = cpuClock +
0 + cpuCurinst_ExtraTiming
    }; cpuOpArray[192] = function () { cpuCurinst_AddressingMode = 3; cpuCurinst_Parameters0 = cpuGetByte(cpuProgramCounter++); var a = cpuIndexRegisterY + 256 - decodeOperand(); _compare(a); cpuClock = cpuClock + 2 + cpuCurinst_ExtraTiming }; cpuOpArray[193] = function () { cpuCurinst_AddressingMode = 12; cpuCurinst_Parameters0 = cpuGetByte(cpuProgramCounter++); var a = cpuAccumulator + 256 - decodeOperand(); _compare(a); cpuClock = cpuClock + 6 + cpuCurinst_ExtraTiming }; cpuOpArray[194] = function () {
        cpuCurinst_AddressingMode = 1; cpuCurinst_AddressingMode ===
9 && decodeAddress(); cpuClock = cpuClock + 3 + cpuCurinst_ExtraTiming
    }; cpuOpArray[195] = function () { cpuCurinst_AddressingMode = 1; cpuClock = cpuClock + 0 + cpuCurinst_ExtraTiming }; cpuOpArray[196] = function () { cpuCurinst_AddressingMode = 4; cpuCurinst_Parameters0 = cpuGetByte(cpuProgramCounter++); var a = cpuIndexRegisterY + 256 - decodeOperand(); _compare(a); cpuClock = cpuClock + 3 + cpuCurinst_ExtraTiming }; cpuOpArray[197] = function () {
        cpuCurinst_AddressingMode = 4; cpuCurinst_Parameters0 = cpuGetByte(cpuProgramCounter++); var a = cpuAccumulator +
256 - decodeOperand(); _compare(a); cpuClock = cpuClock + 2 + cpuCurinst_ExtraTiming
    }; cpuOpArray[198] = function () { cpuCurinst_AddressingMode = 4; cpuCurinst_Parameters0 = cpuGetByte(cpuProgramCounter++); var a = decodeOperand(); a--; cpuSetByte(decodeAddress(), a); _setZNFlags(a); cpuClock = cpuClock + 5 + cpuCurinst_ExtraTiming }; cpuOpArray[199] = function () { cpuCurinst_AddressingMode = 1; cpuClock = cpuClock + 0 + cpuCurinst_ExtraTiming }; cpuOpArray[200] = function () {
        cpuCurinst_AddressingMode = 1; cpuIndexRegisterY += 1; cpuIndexRegisterY &= 255; _setZNFlags(cpuIndexRegisterY);
        cpuClock = cpuClock + 2 + cpuCurinst_ExtraTiming
    }; cpuOpArray[201] = function () { cpuCurinst_AddressingMode = 3; cpuCurinst_Parameters0 = cpuGetByte(cpuProgramCounter++); var a = cpuAccumulator + 256 - decodeOperand(); _compare(a); cpuClock = cpuClock + 2 + cpuCurinst_ExtraTiming }; cpuOpArray[202] = function () { cpuCurinst_AddressingMode = 1; cpuIndexRegisterX -= 1; cpuIndexRegisterX &= 255; _setZNFlags(cpuIndexRegisterX); cpuClock = cpuClock + 2 + cpuCurinst_ExtraTiming }; cpuOpArray[203] = function () { cpuCurinst_AddressingMode = 1; cpuClock = cpuClock + 0 + cpuCurinst_ExtraTiming };
    cpuOpArray[204] = function () { cpuCurinst_AddressingMode = 8; cpuCurinst_Parameters0 = cpuGetByte(cpuProgramCounter++); cpuCurinst_Parameters1 = cpuGetByte(cpuProgramCounter++); var a = cpuIndexRegisterY + 256 - decodeOperand(); _compare(a); cpuClock = cpuClock + 4 + cpuCurinst_ExtraTiming }; cpuOpArray[205] = function () {
        cpuCurinst_AddressingMode = 8; cpuCurinst_Parameters0 = cpuGetByte(cpuProgramCounter++); cpuCurinst_Parameters1 = cpuGetByte(cpuProgramCounter++); var a = cpuAccumulator + 256 - decodeOperand(); _compare(a); cpuClock = cpuClock +
4 + cpuCurinst_ExtraTiming
    }; cpuOpArray[206] = function () { cpuCurinst_AddressingMode = 8; cpuCurinst_Parameters0 = cpuGetByte(cpuProgramCounter++); cpuCurinst_Parameters1 = cpuGetByte(cpuProgramCounter++); var a = decodeOperand(); a--; cpuSetByte(decodeAddress(), a); _setZNFlags(a); cpuClock = cpuClock + 6 + cpuCurinst_ExtraTiming }; cpuOpArray[207] = function () { cpuCurinst_AddressingMode = 1; cpuClock = cpuClock + 0 + cpuCurinst_ExtraTiming }; cpuOpArray[208] = function () {
        cpuCurinst_AddressingMode = 7; cpuCurinst_Parameters0 = cpuGetByte(cpuProgramCounter++);
        if ((cpuStatusRegister & 2) !== 2) { cpuCurinst_ExtraTiming = 1; var a = cpuCurinst_Parameters0 & 255; (a & 128) === 128 && (a -= 256); cpuProgramCounter += a; (cpuProgramCounter & 255) < a && (cpuCurinst_ExtraTiming = 2) } cpuClock = cpuClock + 2 + cpuCurinst_ExtraTiming
    }; cpuOpArray[209] = function () { cpuCurinst_AddressingMode = 13; cpuCurinst_Parameters0 = cpuGetByte(cpuProgramCounter++); var a = cpuAccumulator + 256 - decodeOperand(); _compare(a); cpuClock = cpuClock + 5 + cpuCurinst_ExtraTiming }; cpuOpArray[210] = function () {
        cpuCurinst_AddressingMode = 14; cpuCurinst_Parameters0 =
cpuGetByte(cpuProgramCounter++); cpuClock = cpuClock + 0 + cpuCurinst_ExtraTiming
    }; cpuOpArray[211] = function () { cpuCurinst_AddressingMode = 1; cpuClock = cpuClock + 0 + cpuCurinst_ExtraTiming }; cpuOpArray[212] = function () { cpuCurinst_AddressingMode = 1; cpuCurinst_AddressingMode === 9 && decodeAddress(); cpuClock = cpuClock + 3 + cpuCurinst_ExtraTiming }; cpuOpArray[213] = function () {
        cpuCurinst_AddressingMode = 5; cpuCurinst_Parameters0 = cpuGetByte(cpuProgramCounter++); var a = cpuAccumulator + 256 - decodeOperand(); _compare(a); cpuClock = cpuClock +
4 + cpuCurinst_ExtraTiming
    }; cpuOpArray[214] = function () { cpuCurinst_AddressingMode = 5; cpuCurinst_Parameters0 = cpuGetByte(cpuProgramCounter++); var a = decodeOperand(); a--; cpuSetByte(decodeAddress(), a); _setZNFlags(a); cpuClock = cpuClock + 6 + cpuCurinst_ExtraTiming }; cpuOpArray[215] = function () { cpuCurinst_AddressingMode = 1; cpuClock = cpuClock + 0 + cpuCurinst_ExtraTiming }; cpuOpArray[216] = function () { cpuCurinst_AddressingMode = 1; cpuSetFlag(8, !1); cpuClock = cpuClock + 2 + cpuCurinst_ExtraTiming }; cpuOpArray[217] = function () {
        cpuCurinst_AddressingMode =
10; cpuCurinst_Parameters0 = cpuGetByte(cpuProgramCounter++); cpuCurinst_Parameters1 = cpuGetByte(cpuProgramCounter++); var a = cpuAccumulator + 256 - decodeOperand(); _compare(a); cpuClock = cpuClock + 4 + cpuCurinst_ExtraTiming
    }; cpuOpArray[218] = function () { cpuCurinst_AddressingMode = 1; cpuCurinst_AddressingMode === 9 && decodeAddress(); cpuClock = cpuClock + 2 + cpuCurinst_ExtraTiming }; cpuOpArray[219] = function () { cpuCurinst_AddressingMode = 1; cpuClock = cpuClock + 0 + cpuCurinst_ExtraTiming }; cpuOpArray[220] = function () {
        cpuCurinst_AddressingMode =
1; cpuCurinst_AddressingMode === 9 && decodeAddress(); cpuClock = cpuClock + 6 + cpuCurinst_ExtraTiming
    }; cpuOpArray[221] = function () { cpuCurinst_AddressingMode = 9; cpuCurinst_Parameters0 = cpuGetByte(cpuProgramCounter++); cpuCurinst_Parameters1 = cpuGetByte(cpuProgramCounter++); var a = cpuAccumulator + 256 - decodeOperand(); _compare(a); cpuClock = cpuClock + 4 + cpuCurinst_ExtraTiming }; cpuOpArray[222] = function () {
        cpuCurinst_AddressingMode = 9; cpuCurinst_Parameters0 = cpuGetByte(cpuProgramCounter++); cpuCurinst_Parameters1 = cpuGetByte(cpuProgramCounter++);
        var a = decodeOperand(); a--; cpuSetByte(decodeAddress(), a); _setZNFlags(a); cpuClock = cpuClock + 7 + cpuCurinst_ExtraTiming
    }; cpuOpArray[223] = function () { cpuCurinst_AddressingMode = 1; cpuClock = cpuClock + 0 + cpuCurinst_ExtraTiming }; cpuOpArray[224] = function () { cpuCurinst_AddressingMode = 3; cpuCurinst_Parameters0 = cpuGetByte(cpuProgramCounter++); var a = cpuIndexRegisterX + 256 - decodeOperand(); _compare(a); cpuClock = cpuClock + 2 + cpuCurinst_ExtraTiming }; cpuOpArray[225] = function () {
        cpuCurinst_AddressingMode = 12; cpuCurinst_Parameters0 =
cpuGetByte(cpuProgramCounter++); var a = decodeOperand(), b = cpuAccumulator - a - ((cpuStatusRegister ^ 1) & 1); cpuSetFlag(NES.CPU.Fastendo.CPUStatusMasks.overflowMask, ((cpuAccumulator ^ b) & 128) === 128 && ((cpuAccumulator ^ a) & 128) === 128); cpuSetFlag(1, b < 256); cpuAccumulator = b & 255; _setZNFlags(cpuAccumulator); cpuClock = cpuClock + 6 + cpuCurinst_ExtraTiming
    }; cpuOpArray[226] = function () { cpuCurinst_AddressingMode = 1; cpuCurinst_AddressingMode === 9 && decodeAddress(); cpuClock = cpuClock + 3 + cpuCurinst_ExtraTiming }; cpuOpArray[227] = function () {
        cpuCurinst_AddressingMode =
1; cpuClock = cpuClock + 0 + cpuCurinst_ExtraTiming
    }; cpuOpArray[228] = function () { cpuCurinst_AddressingMode = 4; cpuCurinst_Parameters0 = cpuGetByte(cpuProgramCounter++); var a = cpuIndexRegisterX + 256 - decodeOperand(); _compare(a); cpuClock = cpuClock + 3 + cpuCurinst_ExtraTiming }; cpuOpArray[229] = function () {
        cpuCurinst_AddressingMode = 4; cpuCurinst_Parameters0 = cpuGetByte(cpuProgramCounter++); var a = decodeOperand(), b = cpuAccumulator - a - ((cpuStatusRegister ^ 1) & 1); cpuSetFlag(NES.CPU.Fastendo.CPUStatusMasks.overflowMask, ((cpuAccumulator ^
b) & 128) === 128 && ((cpuAccumulator ^ a) & 128) === 128); cpuSetFlag(1, b < 256); cpuAccumulator = b & 255; _setZNFlags(cpuAccumulator); cpuClock = cpuClock + 3 + cpuCurinst_ExtraTiming
    }; cpuOpArray[230] = function () { cpuCurinst_AddressingMode = 4; cpuCurinst_Parameters0 = cpuGetByte(cpuProgramCounter++); var a = decodeOperand(); a++; cpuSetByte(decodeAddress(), a); _setZNFlags(a); cpuClock = cpuClock + 5 + cpuCurinst_ExtraTiming }; cpuOpArray[231] = function () { cpuCurinst_AddressingMode = 1; cpuClock = cpuClock + 0 + cpuCurinst_ExtraTiming }; cpuOpArray[232] = function () {
        cpuCurinst_AddressingMode =
1; cpuIndexRegisterX += 1; cpuIndexRegisterX &= 255; _setZNFlags(cpuIndexRegisterX); cpuClock = cpuClock + 2 + cpuCurinst_ExtraTiming
    }; cpuOpArray[233] = function () {
        cpuCurinst_AddressingMode = 3; cpuCurinst_Parameters0 = cpuGetByte(cpuProgramCounter++); var a = decodeOperand(), b = cpuAccumulator - a - ((cpuStatusRegister ^ 1) & 1); cpuSetFlag(NES.CPU.Fastendo.CPUStatusMasks.overflowMask, ((cpuAccumulator ^ b) & 128) === 128 && ((cpuAccumulator ^ a) & 128) === 128); cpuSetFlag(1, b < 256); cpuAccumulator = b & 255; _setZNFlags(cpuAccumulator); cpuClock = cpuClock +
2 + cpuCurinst_ExtraTiming
    }; cpuOpArray[234] = function () { cpuCurinst_AddressingMode = 1; cpuCurinst_AddressingMode === 9 && decodeAddress(); cpuClock = cpuClock + 2 + cpuCurinst_ExtraTiming }; cpuOpArray[235] = function () { cpuCurinst_AddressingMode = 1; cpuClock = cpuClock + 0 + cpuCurinst_ExtraTiming }; cpuOpArray[236] = function () {
        cpuCurinst_AddressingMode = 8; cpuCurinst_Parameters0 = cpuGetByte(cpuProgramCounter++); cpuCurinst_Parameters1 = cpuGetByte(cpuProgramCounter++); var a = cpuIndexRegisterX + 256 - decodeOperand(); _compare(a); cpuClock =
cpuClock + 4 + cpuCurinst_ExtraTiming
    }; cpuOpArray[237] = function () { cpuCurinst_AddressingMode = 8; cpuCurinst_Parameters0 = cpuGetByte(cpuProgramCounter++); cpuCurinst_Parameters1 = cpuGetByte(cpuProgramCounter++); var a = decodeOperand(), b = cpuAccumulator - a - ((cpuStatusRegister ^ 1) & 1); cpuSetFlag(NES.CPU.Fastendo.CPUStatusMasks.overflowMask, ((cpuAccumulator ^ b) & 128) === 128 && ((cpuAccumulator ^ a) & 128) === 128); cpuSetFlag(1, b < 256); cpuAccumulator = b & 255; _setZNFlags(cpuAccumulator); cpuClock = cpuClock + 4 + cpuCurinst_ExtraTiming }; cpuOpArray[238] =
function () { cpuCurinst_AddressingMode = 8; cpuCurinst_Parameters0 = cpuGetByte(cpuProgramCounter++); cpuCurinst_Parameters1 = cpuGetByte(cpuProgramCounter++); var a = decodeOperand(); a++; cpuSetByte(decodeAddress(), a); _setZNFlags(a); cpuClock = cpuClock + 6 + cpuCurinst_ExtraTiming }; cpuOpArray[239] = function () { cpuCurinst_AddressingMode = 1; cpuClock = cpuClock + 0 + cpuCurinst_ExtraTiming }; cpuOpArray[240] = function () {
    cpuCurinst_AddressingMode = 7; cpuCurinst_Parameters0 = cpuGetByte(cpuProgramCounter++); if ((cpuStatusRegister & 2) === 2) {
        cpuCurinst_ExtraTiming =
1; var a = cpuCurinst_Parameters0 & 255; (a & 128) === 128 && (a -= 256); cpuProgramCounter += a; (cpuProgramCounter & 255) < a && (cpuCurinst_ExtraTiming = 2)
    } cpuClock = cpuClock + 2 + cpuCurinst_ExtraTiming
}; cpuOpArray[241] = function () {
    cpuCurinst_AddressingMode = 13; cpuCurinst_Parameters0 = cpuGetByte(cpuProgramCounter++); var a = decodeOperand(), b = cpuAccumulator - a - ((cpuStatusRegister ^ 1) & 1); cpuSetFlag(NES.CPU.Fastendo.CPUStatusMasks.overflowMask, ((cpuAccumulator ^ b) & 128) === 128 && ((cpuAccumulator ^ a) & 128) === 128); cpuSetFlag(1, b < 256); cpuAccumulator =
b & 255; _setZNFlags(cpuAccumulator); cpuClock = cpuClock + 5 + cpuCurinst_ExtraTiming
}; cpuOpArray[242] = function () { cpuCurinst_AddressingMode = 14; cpuCurinst_Parameters0 = cpuGetByte(cpuProgramCounter++); cpuClock = cpuClock + 0 + cpuCurinst_ExtraTiming }; cpuOpArray[243] = function () { cpuCurinst_AddressingMode = 1; cpuClock = cpuClock + 0 + cpuCurinst_ExtraTiming }; cpuOpArray[244] = function () { cpuCurinst_AddressingMode = 1; cpuCurinst_AddressingMode === 9 && decodeAddress(); cpuClock = cpuClock + 3 + cpuCurinst_ExtraTiming }; cpuOpArray[245] = function () {
    cpuCurinst_AddressingMode =
5; cpuCurinst_Parameters0 = cpuGetByte(cpuProgramCounter++); var a = decodeOperand(), b = cpuAccumulator - a - ((cpuStatusRegister ^ 1) & 1); cpuSetFlag(NES.CPU.Fastendo.CPUStatusMasks.overflowMask, ((cpuAccumulator ^ b) & 128) === 128 && ((cpuAccumulator ^ a) & 128) === 128); cpuSetFlag(1, b < 256); cpuAccumulator = b & 255; _setZNFlags(cpuAccumulator); cpuClock = cpuClock + 4 + cpuCurinst_ExtraTiming
}; cpuOpArray[246] = function () {
    cpuCurinst_AddressingMode = 5; cpuCurinst_Parameters0 = cpuGetByte(cpuProgramCounter++); var a = decodeOperand(); a++; cpuSetByte(decodeAddress(),
a); _setZNFlags(a); cpuClock = cpuClock + 6 + cpuCurinst_ExtraTiming
}; cpuOpArray[247] = function () { cpuCurinst_AddressingMode = 1; cpuClock = cpuClock + 0 + cpuCurinst_ExtraTiming }; cpuOpArray[248] = function () { cpuCurinst_AddressingMode = 1; cpuSetFlag(8, !0); cpuClock = cpuClock + 2 + cpuCurinst_ExtraTiming }; cpuOpArray[249] = function () {
    cpuCurinst_AddressingMode = 10; cpuCurinst_Parameters0 = cpuGetByte(cpuProgramCounter++); cpuCurinst_Parameters1 = cpuGetByte(cpuProgramCounter++); var a = decodeOperand(), b = cpuAccumulator - a - ((cpuStatusRegister ^
1) & 1); cpuSetFlag(NES.CPU.Fastendo.CPUStatusMasks.overflowMask, ((cpuAccumulator ^ b) & 128) === 128 && ((cpuAccumulator ^ a) & 128) === 128); cpuSetFlag(1, b < 256); cpuAccumulator = b & 255; _setZNFlags(cpuAccumulator); cpuClock = cpuClock + 4 + cpuCurinst_ExtraTiming
}; cpuOpArray[250] = function () { cpuCurinst_AddressingMode = 1; cpuCurinst_AddressingMode === 9 && decodeAddress(); cpuClock = cpuClock + 2 + cpuCurinst_ExtraTiming }; cpuOpArray[251] = function () { cpuCurinst_AddressingMode = 1; cpuClock = cpuClock + 0 + cpuCurinst_ExtraTiming }; cpuOpArray[252] = function () {
    cpuCurinst_AddressingMode =
1; cpuCurinst_AddressingMode === 9 && decodeAddress(); cpuClock = cpuClock + 6 + cpuCurinst_ExtraTiming
}; cpuOpArray[253] = function () {
    cpuCurinst_AddressingMode = 9; cpuCurinst_Parameters0 = cpuGetByte(cpuProgramCounter++); cpuCurinst_Parameters1 = cpuGetByte(cpuProgramCounter++); var a = decodeOperand(), b = cpuAccumulator - a - ((cpuStatusRegister ^ 1) & 1); cpuSetFlag(NES.CPU.Fastendo.CPUStatusMasks.overflowMask, ((cpuAccumulator ^ b) & 128) === 128 && ((cpuAccumulator ^ a) & 128) === 128); cpuSetFlag(1, b < 256); cpuAccumulator = b & 255; _setZNFlags(cpuAccumulator);
    cpuClock = cpuClock + 4 + cpuCurinst_ExtraTiming
}; cpuOpArray[254] = function () { cpuCurinst_AddressingMode = 9; cpuCurinst_Parameters0 = cpuGetByte(cpuProgramCounter++); cpuCurinst_Parameters1 = cpuGetByte(cpuProgramCounter++); var a = decodeOperand(); a++; cpuSetByte(decodeAddress(), a); _setZNFlags(a); cpuClock = cpuClock + 7 + cpuCurinst_ExtraTiming } 
}
var frameOn = !0, cpuStatusRegister, cpuAccumulator, cpuIndexRegisterX, cpuIndexRegisterY, cpuStackPointer, cpuProgramCounter, cpuCurinst_Address, cpuCurinst_OpCode, cpuCurinst_AddressingMode, cpuCurinst_ExtraTiming, cpuCurinst_Parameters0, cpuCurinst_Parameters1, cpuClock = 0, cpuLowByte = 0, cpuHighByte = 0, cpuNextEvent, cpuHandleIRQ = !1, cpuHandleNMI = !1, cpuPixelWhizzler, cpuCart, cpuRams = Array(8192);
function decodeOperand() { switch (cpuCurinst_AddressingMode) { case 3: return cpuDataBus = cpuCurinst_Parameters0; case 2: return cpuAccumulator; default: return cpuDataBus = cpuGetByte(decodeAddress()) } } function runFrame() { frameOn = !0; for (findNextEvent(); frameOn; ) step() } function findNextEvent() { cpuNextEvent = cpuClock + get_nextEventAt() } function handleNextEvent() { handleEvent(cpuClock); findNextEvent() }
function cpuGetByte(a) { var b = 0; switch (a & 61440) { case 0: case 4096: b = a < 2048 ? cpuRams[a] : a >> 8; break; case 8192: case 12288: b = getPPUByte(cpuClock, a); break; case 16384: switch (a) { case 16406: break; case 16407: break; case 16405: break; default: b = a >> 8 } break; case 20480: b = a >> 8; break; case 24576: case 28672: case 32768: case 36864: case 40960: case 45056: case 49152: case 53248: case 57344: case 61440: b = cpuCart.getByte(cpuClock, a); break; default: throw Error("Bullshit!"); } return b & 255 }
function setCurrentByte() { cpuSetByte(cpuAddressBus, cpuDataBus & 255) }
function cpuSetByte(a, b) { if (a < 2048) cpuRams[a & 2047] = b; else switch (a & 61440) { case 0: case 4096: cpuRams[a & 2047] = b; break; case 20480: cpuCart.setByte(cpuClock, a, b); break; case 24576: case 28672: case 32768: case 36864: case 40960: case 45056: case 49152: case 53248: case 57344: case 61440: cpuCart.setByte(cpuClock, a, b); break; case 8192: case 12288: setPPUByte(cpuClock, a, b); break; case 16384: switch (a) { case 16404: copySprites(cpuRams, b * 256), cpuCurinst_ExtraTiming += 512 } } }
function cpuSetFlag(a, b) { cpuStatusRegister = b ? cpuStatusRegister | a : cpuStatusRegister & ~a; cpuStatusRegister |= 32 } function cpuGetFlag(a) { return (cpuStatusRegister & a) === a } function cpuPushStack(a) { cpuRams[cpuStackPointer + 256] = a; cpuStackPointer--; cpuStackPointer < 0 && (cpuStackPointer = 255) } function cpuPopStack() { cpuStackPointer++; cpuStackPointer > 255 && (cpuStackPointer = 0); return cpuRams[cpuStackPointer + 256] & 255 }
function step() { cpuCurinst_ExtraTiming = 0; cpuNextEvent <= cpuClock && handleNextEvent(); cpuHandleNMI ? (cpuHandleNMI = !1, cpuClock += 7, nonMaskableInterrupt()) : cpuHandleIRQ && (cpuHandleIRQ = !1, cpuClock += 7, interruptRequest()); cpuCurinst_Address = cpuProgramCounter; cpuCurinst_OpCode = cpuGetByte(cpuProgramCounter++); cpuOpArray[cpuCurinst_OpCode]() }
function interruptRequest() { cpuGetFlag(4) || (cpuSetFlag(4, !0), cpuPushStack(cpuProgramCounter >> 8), cpuPushStack(cpuProgramCounter), cpuPushStack(cpuStatusRegister), cpuProgramCounter = puGetByte(65534) + (cpuGetByte(65535) << 8)) } function nonMaskableInterrupt() { var a = cpuStatusRegister & -17 | 32; cpuSetFlag(4, !0); cpuPushStack(cpuProgramCounter >> 8); cpuPushStack(cpuProgramCounter & 255); cpuPushStack(a); var a = cpuGetByte(65530), b = cpuGetByte(65531); cpuProgramCounter = a | b << 8 }
function resetCPU() { cpuStatusRegister = 52; cpuStackPointer = 253; cpuProgramCounter = cpuGetByte(65532) + cpuGetByte(65533) * 256 } function powerOn() { cpuStatusRegister = 52; cpuStackPointer = 253; for (var a = 0; a < 2048; ++a) cpuRams[a] = 255; cpuRams[8] = 247; cpuRams[9] = 239; cpuRams[10] = 223; cpuRams[15] = 191; cpuProgramCounter = cpuGetByte(65532) + cpuGetByte(65533) * 256 }
function decodeAddress() {
    var a = cpuCurinst_ExtraTiming = 0; switch (cpuCurinst_AddressingMode) {
        case 8: a = cpuCurinst_Parameters1 << 8 | cpuCurinst_Parameters0; break; case 9: a = (cpuCurinst_Parameters1 << 8 | cpuCurinst_Parameters0) + cpuIndexRegisterX; (a & 255) < cpuIndexRegisterX && (cpuCurinst_ExtraTiming = 1); break; case 10: a = (cpuCurinst_Parameters1 << 8 | cpuCurinst_Parameters0) + cpuIndexRegisterY; (a & 255) < cpuIndexRegisterY && (cpuCurinst_ExtraTiming = 1); break; case 4: a = cpuCurinst_Parameters0 & 255; break; case 5: a = cpuCurinst_Parameters0 +
cpuIndexRegisterX & 255; break; case 6: a = cpuCurinst_Parameters0 + cpuIndexRegisterY & 255; break; case 11: cpuLowByte = cpuCurinst_Parameters0; cpuHighByte = cpuCurinst_Parameters1 << 8; var a = (cpuHighByte | cpuLowByte) & 65535, b = cpuGetByte(a); cpuLowByte = cpuLowByte + 1 & 255; a = (cpuHighByte | cpuLowByte) & 65535; b |= cpuGetByte(a) << 8; a = b; break; case 12: a = cpuCurinst_Parameters0 + cpuIndexRegisterX & 255; cpuLowByte = cpuGetByte(a); a += 1; cpuHighByte = cpuGetByte(a & 255); cpuHighByte <<= 8; a = cpuHighByte | cpuLowByte; break; case 13: cpuLowByte = cpuGetByte(cpuCurinst_Parameters0);
            cpuHighByte = cpuGetByte(cpuCurinst_Parameters0 + 1 & 255) << 8; a = cpuLowByte | cpuHighByte; a += cpuIndexRegisterY; (a & 255) > cpuIndexRegisterY && (cpuCurinst_ExtraTiming = 1); break; case 7: a = cpuProgramCounter + cpuCurinst_Parameters0; break; default: throw Error("Executors.DecodeAddress() recieved an invalid addressmode");
    } return a
} function _setZNFlags(a) { (a & 255) === 0 ? cpuStatusRegister |= 2 : cpuStatusRegister &= -3; (a & 128) === 128 ? cpuStatusRegister |= 128 : cpuStatusRegister &= -129 }
function _compare(a) { cpuSetFlag(1, a > 255); _setZNFlags(a & 255) };